# Docker Compose configuration for a PHP development environment with Nginx, PHP 8.4 FPM, and SQL and No-SQL databases
# This setup includes MySQL, and MongoDB as database options
# All rights reserved (2025 Vin√≠cius Cordeiro <vinicordeirogo@gmail.com>)
services:
  nginx:
    image: nginx:latest
    container_name: nginx_server
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    cpuset: "1"
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php

  php:
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: php_8.4_fpm
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    cpuset: "1"
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    ports:
      - "9000:9000"
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    depends_on:
      - mysql

  mysql:
    image: mysql:${MYSQL_VERSION}
    restart: unless-stopped
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./mysql_data:/var/lib/mysql
  
  node:
    image: node:${NODE_VERSION}
    container_name: node
    restart: unless-stopped
    volumes:
      - ./src:/usr/src/app
    working_dir: /usr/src/app
    environment:
      NODE_ENV: ${NODE_ENV}
    ports:
      - "3000:3000"
    command: sh -c "npm install && npm start"

  mongodb:
    image: mongo:${MONGO_VERSION}
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - ./mongodb:/var/lib/mongodb:rw
    ports:
      - "27017:27017"

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./src:/var/www/html
      - ./src/composer.json:/var/www/html/composer.json
      - ./src/composer.lock:/var/www/html/composer.lock
    working_dir: /var/www/html
    command: composer install --no-interaction

volumes:
  mysql_data:
  mongodb_data:
